// Code generated by Kitex v0.4.4. DO NOT EDIT.

package douyinservice

import (
	"context"
	client "github.com/cloudwego/kitex/client"
	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
	user "tiktok-gateway/kitex_gen/user"
)

func serviceInfo() *kitex.ServiceInfo {
	return douyinServiceServiceInfo
}

var douyinServiceServiceInfo = NewServiceInfo()

func NewServiceInfo() *kitex.ServiceInfo {
	serviceName := "DouyinService"
	handlerType := (*user.DouyinService)(nil)
	methods := map[string]kitex.MethodInfo{
		"DouyinUserRegisterMethod": kitex.NewMethodInfo(douyinUserRegisterMethodHandler, newDouyinServiceDouyinUserRegisterMethodArgs, newDouyinServiceDouyinUserRegisterMethodResult, false),
		"DouyinUserLoginMethod":    kitex.NewMethodInfo(douyinUserLoginMethodHandler, newDouyinServiceDouyinUserLoginMethodArgs, newDouyinServiceDouyinUserLoginMethodResult, false),
		"DouyinUserMethod":         kitex.NewMethodInfo(douyinUserMethodHandler, newDouyinServiceDouyinUserMethodArgs, newDouyinServiceDouyinUserMethodResult, false),
	}
	extra := map[string]interface{}{
		"PackageName": "user",
	}
	svcInfo := &kitex.ServiceInfo{
		ServiceName:     serviceName,
		HandlerType:     handlerType,
		Methods:         methods,
		PayloadCodec:    kitex.Thrift,
		KiteXGenVersion: "v0.4.4",
		Extra:           extra,
	}
	return svcInfo
}

func douyinUserRegisterMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*user.DouyinServiceDouyinUserRegisterMethodArgs)
	realResult := result.(*user.DouyinServiceDouyinUserRegisterMethodResult)
	success, err := handler.(user.DouyinService).DouyinUserRegisterMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newDouyinServiceDouyinUserRegisterMethodArgs() interface{} {
	return user.NewDouyinServiceDouyinUserRegisterMethodArgs()
}

func newDouyinServiceDouyinUserRegisterMethodResult() interface{} {
	return user.NewDouyinServiceDouyinUserRegisterMethodResult()
}

func douyinUserLoginMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*user.DouyinServiceDouyinUserLoginMethodArgs)
	realResult := result.(*user.DouyinServiceDouyinUserLoginMethodResult)
	success, err := handler.(user.DouyinService).DouyinUserLoginMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newDouyinServiceDouyinUserLoginMethodArgs() interface{} {
	return user.NewDouyinServiceDouyinUserLoginMethodArgs()
}

func newDouyinServiceDouyinUserLoginMethodResult() interface{} {
	return user.NewDouyinServiceDouyinUserLoginMethodResult()
}

func douyinUserMethodHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
	realArg := arg.(*user.DouyinServiceDouyinUserMethodArgs)
	realResult := result.(*user.DouyinServiceDouyinUserMethodResult)
	success, err := handler.(user.DouyinService).DouyinUserMethod(ctx, realArg.Req)
	if err != nil {
		return err
	}
	realResult.Success = success
	return nil
}
func newDouyinServiceDouyinUserMethodArgs() interface{} {
	return user.NewDouyinServiceDouyinUserMethodArgs()
}

func newDouyinServiceDouyinUserMethodResult() interface{} {
	return user.NewDouyinServiceDouyinUserMethodResult()
}

type kClient struct {
	c client.Client
}

func newServiceClient(c client.Client) *kClient {
	return &kClient{
		c: c,
	}
}

func (p *kClient) DouyinUserRegisterMethod(ctx context.Context, req *user.DouyinUserRegisterRequest) (r *user.DouyinUserRegisterResponse, err error) {
	var _args user.DouyinServiceDouyinUserRegisterMethodArgs
	_args.Req = req
	var _result user.DouyinServiceDouyinUserRegisterMethodResult
	if err = p.c.Call(ctx, "DouyinUserRegisterMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) DouyinUserLoginMethod(ctx context.Context, req *user.DouyinUserLoginRequest) (r *user.DouyinUserLoginResponse, err error) {
	var _args user.DouyinServiceDouyinUserLoginMethodArgs
	_args.Req = req
	var _result user.DouyinServiceDouyinUserLoginMethodResult
	if err = p.c.Call(ctx, "DouyinUserLoginMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}

func (p *kClient) DouyinUserMethod(ctx context.Context, req *user.DouyinUserRequest) (r *user.DouyinUserResponse, err error) {
	var _args user.DouyinServiceDouyinUserMethodArgs
	_args.Req = req
	var _result user.DouyinServiceDouyinUserMethodResult
	if err = p.c.Call(ctx, "DouyinUserMethod", &_args, &_result); err != nil {
		return
	}
	return _result.GetSuccess(), nil
}
